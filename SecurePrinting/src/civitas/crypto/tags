!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CryptoError	CryptoError.java	/^    public CryptoError(String m) { $/;"	m	class:CryptoError
CryptoError	CryptoError.java	/^    public CryptoError(String m, Throwable cause) { $/;"	m	class:CryptoError
CryptoError	CryptoError.java	/^    public CryptoError(Throwable cause) {$/;"	m	class:CryptoError
CryptoError	CryptoError.java	/^public class CryptoError extends Error { $/;"	c
CryptoException	CryptoException.java	/^	public CryptoException(String m) { super(m); }$/;"	m	class:CryptoException
CryptoException	CryptoException.java	/^public class CryptoException extends Exception { $/;"	c
CryptoFactory	CryptoFactory.java	/^public interface CryptoFactory {$/;"	i
CryptoUtil	CryptoUtil.java	/^    private CryptoUtil() { }$/;"	m	class:CryptoUtil	file:
CryptoUtil	CryptoUtil.java	/^public class CryptoUtil {$/;"	c
EG_OPENING_TAG	ElGamalPublicKey.java	/^    public final static String EG_OPENING_TAG = "elGamalPublicKey";$/;"	f	interface:ElGamalPublicKey
ElGamalAbstractKey	ElGamalAbstractKey.java	/^    protected ElGamalAbstractKey(ElGamalParameters params) {$/;"	m	class:ElGamalAbstractKey
ElGamalAbstractKey	ElGamalAbstractKey.java	/^public abstract class ElGamalAbstractKey implements ElGamalKey {$/;"	c
ElGamalAbstractKeyShare	ElGamalAbstractKeyShare.java	/^	protected ElGamalAbstractKeyShare(ElGamalPublicKey pubKey, ElGamalProofKnowDiscLog proof) {$/;"	m	class:ElGamalAbstractKeyShare
ElGamalAbstractKeyShare	ElGamalAbstractKeyShare.java	/^public abstract class ElGamalAbstractKeyShare implements ElGamalKeyShare$/;"	c
ElGamalCiphertext	ElGamalCiphertext.java	/^public interface ElGamalCiphertext {$/;"	i
ElGamalDecryptionShare	ElGamalDecryptionShare.java	/^public interface ElGamalDecryptionShare {$/;"	i
ElGamalKey	ElGamalKey.java	/^public interface ElGamalKey {$/;"	i
ElGamalKeyPair	ElGamalKeyPair.java	/^public interface ElGamalKeyPair {$/;"	i
ElGamalKeyPairImpl	ElGamalKeyPairImpl.java	/^	public ElGamalKeyPairImpl(ElGamalPublicKey K, ElGamalPrivateKey k) {$/;"	m	class:ElGamalKeyPairImpl
ElGamalKeyPairImpl	ElGamalKeyPairImpl.java	/^public class ElGamalKeyPairImpl implements ElGamalKeyPair {$/;"	c
ElGamalKeyPairShare	ElGamalKeyPairShare.java	/^    public ElGamalKeyPairShare(ElGamalParameters params, $/;"	m	class:ElGamalKeyPairShare
ElGamalKeyPairShare	ElGamalKeyPairShare.java	/^public class ElGamalKeyPairShare {$/;"	c
ElGamalKeyShare	ElGamalKeyShare.java	/^public interface ElGamalKeyShare {$/;"	i
ElGamalMsg	ElGamalMsg.java	/^public interface ElGamalMsg {$/;"	i
ElGamalParameters	ElGamalParameters.java	/^public interface ElGamalParameters {$/;"	i
ElGamalPrivateKey	ElGamalPrivateKey.java	/^public interface ElGamalPrivateKey extends ElGamalKey {$/;"	i
ElGamalProofDVR	ElGamalProofDVR.java	/^public interface ElGamalProofDVR {$/;"	i
ElGamalProofDiscLogEquality	ElGamalProofDiscLogEquality.java	/^public interface ElGamalProofDiscLogEquality {$/;"	i
ElGamalProofKnowDiscLog	ElGamalProofKnowDiscLog.java	/^public interface ElGamalProofKnowDiscLog {$/;"	i
ElGamalPublicKey	ElGamalPublicKey.java	/^public interface ElGamalPublicKey extends PublicKey, ElGamalKey {$/;"	i
ElGamalReencryptFactor	ElGamalReencryptFactor.java	/^public interface ElGamalReencryptFactor {$/;"	i
ElGamalSignedCiphertext	ElGamalSignedCiphertext.java	/^public interface ElGamalSignedCiphertext extends ElGamalCiphertext {$/;"	i
K	ElGamalKeyPairImpl.java	/^	final ElGamalPublicKey K;$/;"	f	class:ElGamalKeyPairImpl
KeyPair	KeyPair.java	/^    public KeyPair(final PublicKey publicKey, final PrivateKey privateKey) {$/;"	m	class:KeyPair
KeyPair	KeyPair.java	/^public class KeyPair {$/;"	c
MessageDigest	MessageDigest.java	/^public interface MessageDigest {$/;"	i
MessageDigestWriter	MessageDigestWriter.java	/^    public MessageDigestWriter(Writer w, MessageDigest md) {$/;"	m	class:MessageDigestWriter
MessageDigestWriter	MessageDigestWriter.java	/^public class MessageDigestWriter extends Writer {$/;"	c
OPENING_TAG	ElGamalCiphertext.java	/^    public static final String OPENING_TAG = "elGamalCiphertext";$/;"	f	interface:ElGamalCiphertext
OPENING_TAG	ElGamalDecryptionShare.java	/^    public final static String OPENING_TAG = "elGamalDecryptionShare";$/;"	f	interface:ElGamalDecryptionShare
OPENING_TAG	PETCommitment.java	/^    public final static String{*<-*} OPENING_TAG = "petC";$/;"	f	interface:PETCommitment
OPENING_TAG	PETDecommitment.java	/^    public final static String{*<-*} OPENING_TAG = "petD";$/;"	f	interface:PETDecommitment
OPENING_TAG	PublicKey.java	/^    public final static String OPENING_TAG = "publicKey";$/;"	f	interface:PublicKey
OPENING_TAG	PublicKeyCiphertext.java	/^    public static final String OPENING_TAG = "publicKeyCiphertext";$/;"	f	interface:PublicKeyCiphertext
OPENING_TAG	SharedKey.java	/^    public final static String OPENING_TAG = "sharedKey";$/;"	f	interface:SharedKey
OPENING_TAG	SharedKeyCiphertext.java	/^    public static final String{*<-*} OPENING_TAG = "sharedKeyCiphertext";$/;"	f	interface:SharedKeyCiphertext
OPENING_TAG	Signature.java	/^    public static final String OPENING_TAG = "signature";$/;"	f	interface:Signature
OPENING_TAG	VoteCapability.java	/^    public static final String OPENING_TAG = "voteCapability";$/;"	f	interface:VoteCapability
OPENING_TAG	VoteCapabilityShare.java	/^    public static final String OPENING_TAG = "voteCapabilityShare";$/;"	f	interface:VoteCapabilityShare
PETCommitment	PETCommitment.java	/^public interface PETCommitment {$/;"	i
PETDecommitment	PETDecommitment.java	/^public interface PETDecommitment {$/;"	i
PETShare	PETShare.java	/^public interface PETShare {$/;"	i
PETShareC	PETShareC.java	/^    public PETShareC(ElGamalCiphertextC ciphertext1, ElGamalCiphertextC ciphertext2, CivitasBigInteger exponent) {$/;"	m	class:PETShareC
PETShareC	PETShareC.java	/^class PETShareC implements PETShare {$/;"	c
PrivateKey	PrivateKey.java	/^public interface PrivateKey {$/;"	i
ProofVote	ProofVote.java	/^public interface ProofVote {$/;"	i
PublicKey	PublicKey.java	/^public interface PublicKey {$/;"	i
PublicKeyCiphertext	PublicKeyCiphertext.java	/^public interface PublicKeyCiphertext {$/;"	i
PublicKeyMsg	PublicKeyMsg.java	/^public interface PublicKeyMsg {$/;"	i
SharedKey	SharedKey.java	/^public interface SharedKey extends jif.lang.Principal {$/;"	i
SharedKeyCiphertext	SharedKeyCiphertext.java	/^public interface SharedKeyCiphertext {$/;"	i
SharedKeyMsg	SharedKeyMsg.java	/^public interface SharedKeyMsg {$/;"	i
Signature	Signature.java	/^public interface Signature {$/;"	i
VoteCapability	VoteCapability.java	/^public interface VoteCapability extends ElGamalMsg {$/;"	i
VoteCapabilityShare	VoteCapabilityShare.java	/^public interface VoteCapabilityShare extends ElGamalMsg {$/;"	i
bytesToBase64	CryptoFactory.java	/^  String bytesToBase64(byte[] a);$/;"	m	interface:CryptoFactory
ciphertext1	PETShare.java	/^    ElGamalCiphertext{this} ciphertext1();$/;"	m	interface:PETShare
ciphertext1	PETShareC.java	/^    protected final ElGamalCiphertextC ciphertext1;$/;"	f	class:PETShareC
ciphertext1	PETShareC.java	/^    public ElGamalCiphertext ciphertext1() {$/;"	m	class:PETShareC
ciphertext2	PETShare.java	/^    ElGamalCiphertext{this} ciphertext2();$/;"	m	interface:PETShare
ciphertext2	PETShareC.java	/^    protected final ElGamalCiphertextC ciphertext2;$/;"	f	class:PETShareC
ciphertext2	PETShareC.java	/^    public ElGamalCiphertext ciphertext2() {$/;"	m	class:PETShareC
ciphertextA	PETShareC.java	/^	public ElGamalCiphertext ciphertextA() {$/;"	m	class:PETShareC
ciphertextB	PETShareC.java	/^	public ElGamalCiphertext ciphertextB() {$/;"	m	class:PETShareC
civitas.crypto	CryptoError.java	/^package civitas.crypto;$/;"	p
civitas.crypto	CryptoException.java	/^package civitas.crypto;$/;"	p
civitas.crypto	CryptoFactory.java	/^package civitas.crypto;$/;"	p
civitas.crypto	CryptoUtil.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalAbstractKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalAbstractKeyShare.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalCiphertext.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalDecryptionShare.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalKeyPair.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalKeyPairImpl.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalKeyPairShare.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalKeyShare.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalMsg.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalParameters.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalPrivateKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalProofDVR.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalProofDiscLogEquality.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalProofKnowDiscLog.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalPublicKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalReencryptFactor.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ElGamalSignedCiphertext.java	/^package civitas.crypto;$/;"	p
civitas.crypto	KeyPair.java	/^package civitas.crypto;$/;"	p
civitas.crypto	MessageDigest.java	/^package civitas.crypto;$/;"	p
civitas.crypto	MessageDigestWriter.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PETCommitment.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PETDecommitment.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PETShare.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PrivateKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	ProofVote.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PublicKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PublicKeyCiphertext.java	/^package civitas.crypto;$/;"	p
civitas.crypto	PublicKeyMsg.java	/^package civitas.crypto;$/;"	p
civitas.crypto	SharedKey.java	/^package civitas.crypto;$/;"	p
civitas.crypto	SharedKeyCiphertext.java	/^package civitas.crypto;$/;"	p
civitas.crypto	SharedKeyMsg.java	/^package civitas.crypto;$/;"	p
civitas.crypto	Signature.java	/^package civitas.crypto;$/;"	p
civitas.crypto	VoteCapability.java	/^package civitas.crypto;$/;"	p
civitas.crypto	VoteCapabilityShare.java	/^package civitas.crypto;$/;"	p
civitas.crypto.concrete	PETShareC.java	/^package civitas.crypto.concrete;$/;"	p
close	MessageDigestWriter.java	/^    public void close() throws IOException {$/;"	m	class:MessageDigestWriter
combineKeyShares	CryptoFactory.java	/^  ElGamalPublicKey combineKeyShares(ElGamalKeyShare[] shares) throws CryptoException;$/;"	m	interface:CryptoFactory
commitment	PETShareC.java	/^    public PETCommitment commitment(ElGamalParameters params) {$/;"	m	class:PETShareC
constructElGamalProofDVR	CryptoFactory.java	/^  ElGamalProofDVR constructElGamalProofDVR(ElGamalPublicKey k, ElGamalPublicKey verifierKey, ElGamalCiphertext e, ElGamalCiphertext ePrime, ElGamalReencryptFactor er, ElGamalReencryptFactor erPrime);$/;"	m	interface:CryptoFactory
constructFakeElGamalProofDVR	CryptoFactory.java	/^  ElGamalProofDVR constructFakeElGamalProofDVR(ElGamalPublicKey k, ElGamalPublicKey verifierKey, ElGamalPrivateKey verifierPrivKey, ElGamalCiphertext e, ElGamalCiphertext ePrime);$/;"	m	interface:CryptoFactory
constructKeyShare	CryptoFactory.java	/^  ElGamalKeyShare constructKeyShare(ElGamalKeyPairShare kps);$/;"	m	interface:CryptoFactory
constructPETShare	CryptoFactory.java	/^  PETShare constructPETShare(ElGamalParameters params, ElGamalCiphertext a, ElGamalCiphertext b);$/;"	m	interface:CryptoFactory
constructProofKnowDiscLog	CryptoFactory.java	/^  ElGamalProofKnowDiscLog constructProofKnowDiscLog(ElGamalParameters params, ElGamalPrivateKey k);$/;"	m	interface:CryptoFactory
constructProofVote	CryptoFactory.java	/^  ProofVote constructProofVote(ElGamalParameters params, ElGamalCiphertext encCapability, ElGamal1OfLReencryption encChoice, String context, ElGamalReencryptFactor encCapabilityFactor, ElGamalReencryptFactor encChoiceFactor);    $/;"	m	interface:CryptoFactory
decommitment	PETShareC.java	/^    public PETDecommitment decommitment(ElGamalParameters p) {$/;"	m	class:PETShareC
decommitmentProof	PETShareC.java	/^    private static ElGamalProofDiscLogEquality decommitmentProof(ElGamalParametersC params,$/;"	m	class:PETShareC	file:
digest	MessageDigest.java	/^    byte[] digest();$/;"	m	interface:MessageDigest
elGamal1OfLValue	CryptoFactory.java	/^  int elGamal1OfLValue(ElGamalMsg m, int L, ElGamalParameters params) throws CryptoException;$/;"	m	interface:CryptoFactory
elGamalDecrypt	CryptoFactory.java	/^  ElGamalMsg elGamalDecrypt(ElGamalPrivateKey key, ElGamalCiphertext ciphertext) throws CryptoException;$/;"	m	interface:CryptoFactory
elGamalDecrypt	CryptoFactory.java	/^  ElGamalMsg elGamalDecrypt(ElGamalPrivateKey key, ElGamalSignedCiphertext ciphertext, byte[] additionalEnv) throws CryptoException;$/;"	m	interface:CryptoFactory
elGamalEncrypt	CryptoFactory.java	/^  ElGamalCiphertext elGamalEncrypt(ElGamalPublicKey key, ElGamalMsg msg);$/;"	m	interface:CryptoFactory
elGamalEncrypt	CryptoFactory.java	/^  ElGamalCiphertext elGamalEncrypt(ElGamalPublicKey key, ElGamalMsg msg, ElGamalReencryptFactor r);$/;"	m	interface:CryptoFactory
elGamalKeyShare	CryptoFactory.java	/^  ElGamalKeyShare elGamalKeyShare(ElGamalPublicKey K, ElGamalProofKnowDiscLog proof);$/;"	m	interface:CryptoFactory
elGamalMsg	CryptoFactory.java	/^  ElGamalMsg elGamalMsg(String m, ElGamalParameters p) throws CryptoException;$/;"	m	interface:CryptoFactory
elGamalMsg	CryptoFactory.java	/^  ElGamalMsg elGamalMsg(int m, ElGamalParameters p) throws CryptoException;$/;"	m	interface:CryptoFactory
elGamalReencrypt	CryptoFactory.java	/^  ElGamalCiphertext elGamalReencrypt(ElGamalPublicKey key, ElGamalCiphertext c);$/;"	m	interface:CryptoFactory
elGamalReencrypt	CryptoFactory.java	/^  ElGamalCiphertext elGamalReencrypt(ElGamalPublicKey key, ElGamalCiphertext c, ElGamalReencryptFactor r);$/;"	m	interface:CryptoFactory
elGamalSignedEncrypt	CryptoFactory.java	/^  ElGamalSignedCiphertext elGamalSignedEncrypt(ElGamalPublicKey key, ElGamalMsg msg);$/;"	m	interface:CryptoFactory
elGamalSignedEncrypt	CryptoFactory.java	/^  ElGamalSignedCiphertext elGamalSignedEncrypt(ElGamalPublicKey key, ElGamalMsg msg, ElGamalReencryptFactor r);$/;"	m	interface:CryptoFactory
elGamalSignedEncrypt	CryptoFactory.java	/^  ElGamalSignedCiphertext elGamalSignedEncrypt(ElGamalPublicKey key, ElGamalMsg msg, ElGamalReencryptFactor r, byte[] additionalEnv);$/;"	m	interface:CryptoFactory
elGamalVerify	CryptoFactory.java	/^  boolean elGamalVerify(ElGamalParameters params, ElGamalSignedCiphertext ciphertext);$/;"	m	interface:CryptoFactory
elGamalVerify	CryptoFactory.java	/^  boolean elGamalVerify(ElGamalParameters params, ElGamalSignedCiphertext ciphertext, byte[] additionalEnv);$/;"	m	interface:CryptoFactory
equals	ElGamalAbstractKey.java	/^    public boolean equals(Object o) {$/;"	m	class:ElGamalAbstractKey
equals	ElGamalAbstractKeyShare.java	/^	public boolean equals(Object o) {$/;"	m	class:ElGamalAbstractKeyShare
equals	ProofVote.java	/^    public boolean equals(ProofVote p);$/;"	m	interface:ProofVote
exponent	PETShareC.java	/^	public CivitasBigInteger exponent() {$/;"	m	class:PETShareC
exponent	PETShareC.java	/^    public final CivitasBigInteger exponent;$/;"	f	class:PETShareC
factory	CryptoUtil.java	/^    private static final CryptoFactory factory = civitas.crypto.concrete.CryptoFactoryC.singleton();$/;"	f	class:CryptoUtil	file:
factory	CryptoUtil.java	/^    public static CryptoFactory factory() {$/;"	m	class:CryptoUtil
flush	MessageDigestWriter.java	/^    public void flush() throws IOException {$/;"	m	class:MessageDigestWriter
freshNonce	CryptoFactory.java	/^  byte[] freshNonce(int bitlength);$/;"	m	interface:CryptoFactory
freshNonceBase64	CryptoFactory.java	/^  String freshNonceBase64(int bitlength);$/;"	m	interface:CryptoFactory
fromXML	PETShareC.java	/^    public static PETShareC fromXML(Label lbl, Reader r) throws IOException {$/;"	m	class:PETShareC
generateElGamalKeyPair	CryptoFactory.java	/^  ElGamalKeyPair generateElGamalKeyPair(ElGamalParameters params);$/;"	m	interface:CryptoFactory
generateElGamalParameters	CryptoFactory.java	/^  ElGamalParameters generateElGamalParameters();$/;"	m	interface:CryptoFactory
generateElGamalParameters	CryptoFactory.java	/^  ElGamalParameters generateElGamalParameters(int keyLength, int groupLength);$/;"	m	interface:CryptoFactory
generateElGamalReencryptFactor	CryptoFactory.java	/^  ElGamalReencryptFactor generateElGamalReencryptFactor(ElGamalParameters params);$/;"	m	interface:CryptoFactory
generateKeyPair	CryptoFactory.java	/^  KeyPair generateKeyPair(int keyLength);$/;"	m	interface:CryptoFactory
generateKeyPairShare	CryptoFactory.java	/^  ElGamalKeyPairShare generateKeyPairShare(ElGamalParameters params);$/;"	m	interface:CryptoFactory
generateMsgShare	CryptoFactory.java	/^  ElGamalMsg generateMsgShare(ElGamalParameters p);$/;"	m	interface:CryptoFactory
generateSharedKey	CryptoFactory.java	/^  SharedKey generateSharedKey(int keyLength);$/;"	m	interface:CryptoFactory
getE	ElGamalProofDVR.java	/^    ElGamalCiphertext getE();$/;"	m	interface:ElGamalProofDVR
getEprime	ElGamalProofDVR.java	/^    ElGamalCiphertext getEprime();$/;"	m	interface:ElGamalProofDVR
getParams	ElGamalAbstractKey.java	/^    public ElGamalParameters getParams() {$/;"	m	class:ElGamalAbstractKey
getParams	ElGamalKey.java	/^    public ElGamalParameters getParams();$/;"	m	interface:ElGamalKey
getProof	ElGamalDecryptionShare.java	/^    public ElGamalProofDiscLogEquality getProof();$/;"	m	interface:ElGamalDecryptionShare
hashCode	ElGamalCiphertext.java	/^    public int hashCode();$/;"	m	interface:ElGamalCiphertext
k	ElGamalKeyPairImpl.java	/^	final ElGamalPrivateKey k;$/;"	f	class:ElGamalKeyPairImpl
lbl	PETCommitment.java	/^    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb) where {this} <= lbl;$/;"	f	interface:PETCommitment
lbl	PETDecommitment.java	/^    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb) where {this} <= lbl;$/;"	f	interface:PETDecommitment
lbl	PETShare.java	/^    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb);$/;"	f	interface:PETShare
lbl	SharedKeyCiphertext.java	/^    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb) where {this} <= lbl;$/;"	f	interface:SharedKeyCiphertext
main	MessageDigestWriter.java	/^    public void main(String[] args) { $/;"	m	class:MessageDigestWriter
md	MessageDigestWriter.java	/^    private final MessageDigest md;$/;"	f	class:MessageDigestWriter	file:
messageDigest	CryptoFactory.java	/^  byte[] messageDigest(String s);$/;"	m	interface:CryptoFactory
messageDigest	CryptoFactory.java	/^  byte[] messageDigest(byte[] a);$/;"	m	interface:CryptoFactory
messageDigest	CryptoFactory.java	/^  byte[] messageDigest(byte[] a, boolean constBytes);$/;"	m	interface:CryptoFactory
messageDigest	CryptoFactory.java	/^  byte[] messageDigest(byte[] a, int b);$/;"	m	interface:CryptoFactory
messageDigest	CryptoFactory.java	/^  byte[] messageDigest(byte[] a, int b, boolean constBytes);$/;"	m	interface:CryptoFactory
params	ElGamalAbstractKey.java	/^    public final ElGamalParameters params;$/;"	f	class:ElGamalAbstractKey
params	ElGamalKeyPairShare.java	/^    public final ElGamalParameters params;$/;"	f	class:ElGamalKeyPairShare
petResult	CryptoFactory.java	/^  boolean petResult(ElGamalMsg petResult);$/;"	m	interface:CryptoFactory
privKey	ElGamalKeyPairShare.java	/^    public final ElGamalPrivateKey privKey;$/;"	f	class:ElGamalKeyPairShare
privateKey	ElGamalKeyPair.java	/^	public ElGamalPrivateKey privateKey();$/;"	m	interface:ElGamalKeyPair
privateKey	ElGamalKeyPairImpl.java	/^	public ElGamalPrivateKey privateKey() {$/;"	m	class:ElGamalKeyPairImpl
privateKey	KeyPair.java	/^    public final PrivateKey privateKey;$/;"	f	class:KeyPair
proof	ElGamalAbstractKeyShare.java	/^	protected final ElGamalProofKnowDiscLog proof;$/;"	f	class:ElGamalAbstractKeyShare
proof	ElGamalAbstractKeyShare.java	/^	public ElGamalProofKnowDiscLog proof() { return proof; }$/;"	m	class:ElGamalAbstractKeyShare
proof	ElGamalKeyShare.java	/^	ElGamalProofKnowDiscLog proof();$/;"	m	interface:ElGamalKeyShare
proof	PETDecommitment.java	/^    ElGamalProofDiscLogEquality proof();$/;"	m	interface:PETDecommitment
pubKey	ElGamalAbstractKeyShare.java	/^	protected final ElGamalPublicKey pubKey;$/;"	f	class:ElGamalAbstractKeyShare
pubKey	ElGamalAbstractKeyShare.java	/^	public ElGamalPublicKey pubKey() { return pubKey; }$/;"	m	class:ElGamalAbstractKeyShare
pubKey	ElGamalKeyPairShare.java	/^    public final ElGamalPublicKey pubKey;$/;"	f	class:ElGamalKeyPairShare
pubKey	ElGamalKeyShare.java	/^	ElGamalPublicKey pubKey();$/;"	m	interface:ElGamalKeyShare
publicKey	ElGamalKeyPair.java	/^	public ElGamalPublicKey publicKey();$/;"	m	interface:ElGamalKeyPair
publicKey	ElGamalKeyPairImpl.java	/^	public ElGamalPublicKey publicKey() {$/;"	m	class:ElGamalKeyPairImpl
publicKey	KeyPair.java	/^    public final PublicKey publicKey;$/;"	f	class:KeyPair
publicKeyDecrypt	CryptoFactory.java	/^  PublicKeyMsg publicKeyDecrypt(PrivateKey key, PublicKeyCiphertext ciphertext) throws CryptoException;$/;"	m	interface:CryptoFactory
publicKeyEncrypt	CryptoFactory.java	/^  PublicKeyCiphertext publicKeyEncrypt(PublicKey key, PublicKeyMsg msg);$/;"	m	interface:CryptoFactory
publicKeyMsg	CryptoFactory.java	/^  PublicKeyMsg publicKeyMsg(String m) throws CryptoException;$/;"	m	interface:CryptoFactory
randomInt	CryptoFactory.java	/^  int randomInt(int n); $/;"	m	interface:CryptoFactory
sb	PETShare.java	/^    public void toXML{*lbl}(label lbl, PrintWriter[lbl]{*lbl} sb);$/;"	f	interface:PETShare
serialVersionUID	CryptoError.java	/^	private static final long serialVersionUID = 20061102L;$/;"	f	class:CryptoError	file:
serialVersionUID	CryptoException.java	/^	private static final long serialVersionUID = 20060925L;$/;"	f	class:CryptoException	file:
sharedKeyDecrypt	CryptoFactory.java	/^  SharedKeyMsg sharedKeyDecrypt(SharedKey key, SharedKeyCiphertext ciphertext) throws CryptoException;$/;"	m	interface:CryptoFactory
sharedKeyEncrypt	CryptoFactory.java	/^  SharedKeyCiphertext sharedKeyEncrypt(SharedKey key, SharedKeyMsg msg);$/;"	m	interface:CryptoFactory
sharedKeyMsg	CryptoFactory.java	/^  SharedKeyMsg sharedKeyMsg(String m) throws CryptoException;$/;"	m	interface:CryptoFactory
toString	PublicKeyMsg.java	/^    String toString();$/;"	m	interface:PublicKeyMsg
toString	SharedKeyMsg.java	/^    String toString();$/;"	m	interface:SharedKeyMsg
toWire	SharedKey.java	/^    public void toWire(label lbl, PrintWriter[] sb);$/;"	m	interface:SharedKey
toXML	ElGamalProofDVR.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:ElGamalProofDVR
toXML	PETShareC.java	/^    public void toXML(Label lbl, PrintWriter sb) {$/;"	m	class:PETShareC
toXML	PrivateKey.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:PrivateKey
toXML	ProofVote.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:ProofVote
toXML	PublicKeyCiphertext.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:PublicKeyCiphertext
toXML	SharedKey.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:SharedKey
toXML	Signature.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:Signature
toXML	VoteCapability.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:VoteCapability
toXML	VoteCapabilityShare.java	/^    public void toXML(label lbl, PrintWriter[] sb);$/;"	m	interface:VoteCapabilityShare
update	MessageDigest.java	/^    void update(String s);$/;"	m	interface:MessageDigest
update	MessageDigest.java	/^    void update(byte b);$/;"	m	interface:MessageDigest
update	MessageDigest.java	/^    void update(byte[] bs);$/;"	m	interface:MessageDigest
update	MessageDigest.java	/^    void update(byte[] bs, boolean constBytes);$/;"	m	interface:MessageDigest
update	MessageDigest.java	/^    void update(char[] cbuf, int off, int len);$/;"	m	interface:MessageDigest
update	MessageDigest.java	/^    void update(int i);$/;"	m	interface:MessageDigest
update	MessageDigest.java	/^    void update(long l);$/;"	m	interface:MessageDigest
verify	ElGamalDecryptionShare.java	/^    public boolean verify(ElGamalCiphertext m, ElGamalPublicKey K);$/;"	m	interface:ElGamalDecryptionShare
verify	ElGamalKeyShare.java	/^	boolean verify();$/;"	m	interface:ElGamalKeyShare
verify	ElGamalProofDVR.java	/^    public boolean verify(ElGamalPublicKey K, ElGamalPublicKey verifierKey);$/;"	m	interface:ElGamalProofDVR
verify	ElGamalProofDiscLogEquality.java	/^    public boolean verify(ElGamalParameters params);$/;"	m	interface:ElGamalProofDiscLogEquality
verify	ElGamalProofKnowDiscLog.java	/^    public boolean verify(ElGamalParameters params);$/;"	m	interface:ElGamalProofKnowDiscLog
verify	PETDecommitment.java	/^    public boolean verify(PETCommitment c, ElGamalParameters params, ElGamalCiphertext ciphertext1, ElGamalCiphertext ciphertext2);$/;"	m	interface:PETDecommitment
verify	ProofVote.java	/^    public boolean verify(ElGamalParameters params, $/;"	m	interface:ProofVote
w	MessageDigestWriter.java	/^    private final Writer w;$/;"	f	class:MessageDigestWriter	file:
write	MessageDigestWriter.java	/^    public void write(char[] cbuf, int off, int len) throws IOException {$/;"	m	class:MessageDigestWriter
